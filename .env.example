# Django
SECRET_KEY=replace-me
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1
DJANGO_ENV=production

# Database (Render Postgres provides DATABASE_URL)
DATABASE_URL=

# CORS / CSRF (set your frontend origin)
CORS_ALLOWED_ORIGINS=https://your-frontend-domain
CSRF_TRUSTED_ORIGINS=https://your-backend-domain

# Redis (Render Redis provides REDIS_URL)
REDIS_URL=

# Email
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
DEFAULT_FROM_EMAIL=no-reply@example.com

# JWT
# AUTH_HEADER default is Bearer; adjust as needed via frontend

# Storage (optional S3)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET_NAME=
AWS_S3_REGION_NAME=
AWS_S3_ENDPOINT_URL=

# AI
GOOGLE_API_KEY=
GROQ_API_KEY=
GITHUB_TOKEN=

# Celery
CELERY_BROKER_URL=
CELERY_RESULT_BACKEND=django-db# Django core
SECRET_KEY=change-me
DEBUG=True
DJANGO_ENV=dev
ALLOWED_HOSTS=localhost,127.0.0.1
CORS_ALLOWED_ORIGINS=http://localhost:3000

# Database (choose ONE of the following)
# Option A: Single DATABASE_URL (recommended)
# Example: postgres://USER:PASSWORD@HOST:PORT/DBNAME
DATABASE_URL=

# Option B: Discrete Supabase/Postgres variables (preferred for Supabase)
SUPABASE_DB_HOST=
SUPABASE_DB_PORT=6543
SUPABASE_DB_NAME=
SUPABASE_DB_USER=
SUPABASE_DB_PASSWORD=

# Option B (alternative names):
POSTGRES_HOST=
POSTGRES_PORT=5432
POSTGRES_DB=
POSTGRES_USER=
POSTGRES_PASSWORD=

# Supabase Storage
SUPABASE_URL=
SUPABASE_ANON_KEY=
SUPABASE_BUCKET=media

# Redis (used for Django cache and as default Celery broker)
# Local example: redis://127.0.0.1:6379/0
REDIS_URL=

# Celery (optional overrides)
# If unset, CELERY_BROKER_URL defaults to REDIS_URL and results to django-db.
CELERY_BROKER_URL=
CELERY_RESULT_BACKEND=
# Set to True to execute tasks synchronously during local debugging
CELERY_TASK_ALWAYS_EAGER=False

# Email
# In dev we print emails to console; set real backend + default sender in prod
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
DEFAULT_FROM_EMAIL=no-reply@example.com

# AI Providers
# Google Generative AI (Gemini)
GOOGLE_API_KEY=
# Groq LLMs
GROQ_API_KEY=

GITHUB_TOKEN=
